name: Pipeline

on:
  push:
    branches:
      - 'main'
      - 'feature**'
env:
  PIPELINE_USER_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  PIPELINE_USER_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  OPEN_WEATHER_API_KEY: ${{secrets.OPEN_WEATHER_API_KEY}}
  WMATA_API_KEY: ${{secrets.WMATA_API_KEY}}

  SAM_TEMPLATE: template.yaml
  TESTING_STACK_NAME: pi-app-api
  TESTING_PIPELINE_EXECUTION_ROLE: arn:aws:iam::794553525198:role/aws-sam-cli-managed-dev-pipel-PipelineExecutionRole-lJRYiqxNmZWC
  TESTING_CLOUDFORMATION_EXECUTION_ROLE: arn:aws:iam::794553525198:role/aws-sam-cli-managed-dev-p-CloudFormationExecutionRo-JseGeCHMeFSL
  TESTING_ARTIFACTS_BUCKET: aws-sam-cli-managed-dev-pipeline-r-artifactsbucket-wgvaytglwxnw
  # If there are functions with "Image" PackageType in your template,
  # uncomment the line below and add "--image-repository ${TESTING_IMAGE_REPOSITORY}" to
  # testing "sam package" and "sam deploy" commands.
  # TESTING_IMAGE_REPOSITORY = '0123456789.dkr.ecr.region.amazonaws.com/repository-name'
  TESTING_REGION: us-east-1
  PROD_STACK_NAME: pi-app-api
  PROD_PIPELINE_EXECUTION_ROLE: arn:aws:iam::794553525198:role/aws-sam-cli-managed-prod-pipe-PipelineExecutionRole-818PP0eonuOh
  PROD_CLOUDFORMATION_EXECUTION_ROLE: arn:aws:iam::794553525198:role/aws-sam-cli-managed-prod--CloudFormationExecutionRo-0WwsyvJToyJk
  PROD_ARTIFACTS_BUCKET: aws-sam-cli-managed-prod-pipeline--artifactsbucket-tpizzjolstxg
  # If there are functions with "Image" PackageType in your template,
  # uncomment the line below and add "--image-repository ${PROD_IMAGE_REPOSITORY}" to
  # prod "sam package" and "sam deploy" commands.
  # PROD_IMAGE_REPOSITORY = '0123456789.dkr.ecr.region.amazonaws.com/repository-name'
  PROD_REGION: us-east-1

jobs:
  deploy-prod:
    if: github.ref == 'refs/heads/main'

    runs-on: ubuntu-latest
    # Configure GitHub Action Environment to have a manual approval step before deployment to production
    # https://docs.github.com/en/actions/reference/environments
    # environment: <configured-environment>
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
      - uses: actions/download-artifact@v3
        with:
          name: packaged-prod.yaml

      - name: Assume the prod pipeline user role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ env.PIPELINE_USER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.PIPELINE_USER_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.PROD_REGION }}
          role-to-assume: ${{ env.PROD_PIPELINE_EXECUTION_ROLE }}
          role-session-name: prod-deployment
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Build 
        run: |
          sam build

      - name: Deploy to production account
        run: |
          sam deploy --parameter-overrides OpenWeatherApiKey=${OPEN_WEATHER_API_KEY}  MetroApiKey=${WMATA_API_KEY}

